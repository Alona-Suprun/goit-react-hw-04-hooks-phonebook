{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/FilterContacts/FilterContacts.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/Section/Section.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Button","onClick","allyProps","button","defaultProps","ContactForm","onSubmit","onCheckContact","useState","name","setName","number","setNumber","inputChange","e","currentTarget","value","form","preventDefault","label","placeholder","input","type","pattern","required","onChange","ContactList","contacts","onDeleteContact","list","map","id","item","FilterContact","App","filter","setFilter","JSON","parse","window","localStorage","getItem","Contacts","setContacts","useEffect","setItem","stringify","newContact","contact","uuidv4","inContact","find","alert","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0044881.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3wU2q\",\"label\":\"ContactForm_label__3-da0\",\"input\":\"ContactForm_input__8W9JR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3P20a\",\"item\":\"ContactList_item__3idqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__n_ysn\",\"input\":\"FilterContacts_input__KjvQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2Aun9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1depj\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button className={s.button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from 'react';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst ContactForm = ({ onSubmit, onCheckContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const inputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    const isNoName = onCheckContact(name);\r\n    if (!isNoName) return;\r\n    onSubmit({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={formSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          placeholder=\"type number\"\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.item} key={id}>\r\n        {name}: {number}\r\n        <Button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </Button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './FilterContacts.module.css';\r\n\r\nconst FilterContact = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          title=\"Search contacts\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FilterContact;\r\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section/Section';\nimport Form from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport FilterContact from './components/FilterContacts/FilterContacts';\nimport Contacts from './data/contacts.json';\n\nconst App = () => {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? Contacts;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = newContact => {\n    setContacts(contact => [\n      ...contact,\n      (contact = {\n        id: uuidv4(),\n        name: newContact.name,\n        number: newContact.number,\n      }),\n    ]);\n  };\n\n  const filterContact = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getContactsLis = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const checkContact = name => {\n    const inContact = !!contacts.find(contact => contact.name === name);\n    inContact && alert(name + ' is already in contacts');\n    return !inContact;\n  };\n\n  const deleteContact = contactId => {\n    setContacts(() => contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Section>\n        <Form onSubmit={addContact} onCheckContact={checkContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact value={filter} onChange={filterContact} />\n        <ContactList\n          contacts={getContactsLis()}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}